query getProductQuery($filter: ProductFilterInput){
    ProductQuery{
        getAll(filter: $filter){
            status
            message
            pagination{
                page
                limit
                hasNextPage
                nextPage
            }
            Product:data{
                _id
                name
                customerPrice
                typeId
            }
        }
    }
}

# ********** - This New - **********
# getStoreProducts query: use to view Store Gallery
# pass type Id to filter to get products priced and having type Id
query getStoreProducts(
    $storeId: ID!
    $filter: storeGalleryFilter!
    $pagination: paginationInput
) {
    PricingProductQuery {
        getStoreProducts(
            storeId: $storeId
            filter: $filter
            pagination: $pagination
        ) {
            status
            message
            pagination {
                totalDocs
                limit
                page
                dataCount
                totalPages
            }

            Products: data {
                _id
                productId
                storeId
                storePrice
                discountActive
                discountRatio



                Product {
                    _id
                    name
                    unitId
                    typeId

                    isPackaged
                    unitStep
                    minSellingUnits

                    ImageResponse {
                        status
                        data {
                            name
                        }
                    }
                }
            }
        }
    }
}



# Get not priced By Query :
#  used in store admin page to select products to add to prcing
query getNotPricedBy($storeId: ID! , $filter: ProductFilterInput!){
    ProductQuery{
        getStoreProducts:getNotPricedBy(storeId:$storeId,filter:$filter){
            status
            message
            Products:data{
                _id
                name
                ImageResponse {
                    status
                    data {
                        name
                    }
                }
            }
        }
    }
}


mutation PricingProductMutation($data: createPricingProduct){
    CreatePricingProduct:PricingProductMutation {
        create(data :$data)
        {
            status
            message
            data{
                _id
                productId
                storeId
            }
        }
    }
}

#SingleProduct
query SingleProduct($_id: ID) {
    PricingProductQuery {
        GetSingleProduct:get(_id:$_id) {

            status
            message
            errors{
                code
                path
                message
            }

            Product:data {
                _id
                productId
                storePrice
                StoreResponse{
                    data{
                        name
                        ImageResponse {
                            status
                            data {
                                name
                            }
                        }
                    }
                }
                ProductResponse{
                    ProductData:data{
                        _id
                        name
                        customerPrice
                        description
                        ImageResponse {
                            status
                            data {
                                name
                            }
                        }
                    }
                }


            }
        }
    }
}


#Search
#query StoreSearch($storeId: ID! , $filter: ProductFilterInput! , $pagination: paginationInput){
#    ProductQuery{
#        getStoreProducts:getPricedBy(storeId:$storeId,filter:$filter , pagination:$pagination){
#            status
#            message
#            pagination{
#                totalPages
#            }
#            Products:data{
#                _id
#                name
#
#                PricingProduct(filter:{
#                    storeId:$storeId,
#                    isAvailable:true
#                }){
#                    _id # compare this id
#                    storeId
#                    storePrice # use this price
#                }
#                ImageResponse {
#                    status
#                    data {
#                        name
#
#                    }
#                }
#            }
#        }
#    }
#}

query StoreSearch(
    $storeId: ID!
    $filter: storeGalleryFilter!
    $pagination: paginationInput
) {
    PricingProductQuery {
        getStoreProducts(
            storeId: $storeId
            filter: $filter
            pagination: $pagination
        ) {
            status
            pagination{
                totalPages
            }
            ProductQuery:data {
                _id
                storePrice
                isAvailable
                discountRatio
                discountActive
                Product {
                    _id
                    name

                    isPackaged
                    minSellingUnits
                    unitStep

                    ImageResponse {
                        status
                        data {
                            name
                        }
                    }
                }
            }
        }
    }
}